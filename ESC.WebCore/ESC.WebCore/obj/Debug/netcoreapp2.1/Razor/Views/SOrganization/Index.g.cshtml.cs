#pragma checksum "E:\demo\ESC.Core\ESC.WebCore\ESC.WebCore\Views\SOrganization\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "479243ff69fe171d81fb398fb7855f724025e7d2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_SOrganization_Index), @"mvc.1.0.view", @"/Views/SOrganization/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/SOrganization/Index.cshtml", typeof(AspNetCore.Views_SOrganization_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\demo\ESC.Core\ESC.WebCore\ESC.WebCore\Views\_ViewImports.cshtml"
using ESC.WebCore;

#line default
#line hidden
#line 2 "E:\demo\ESC.Core\ESC.WebCore\ESC.WebCore\Views\_ViewImports.cshtml"
using ESC.WebCore.Models;

#line default
#line hidden
#line 3 "E:\demo\ESC.Core\ESC.WebCore\ESC.WebCore\Views\_ViewImports.cshtml"
using ESC.Infrastructure.DomainObjects;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"479243ff69fe171d81fb398fb7855f724025e7d2", @"/Views/SOrganization/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5a3ef9c5565b308f1245659cc2af715730cd79da", @"/Views/_ViewImports.cshtml")]
    public class Views_SOrganization_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\demo\ESC.Core\ESC.WebCore\ESC.WebCore\Views\SOrganization\Index.cshtml"
  
    ViewBag.Title = "组织机构";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(83, 2754, true);
            WriteLiteral(@"<div id=""org-layout"" class=""bui-view-port bui-border-layout"">
    <div class=""bui-layout-border"">
        <div class=""bui-border-middle"">
            <div id=""org-layout-west"" style=""width:200px;border-right:2px solid #ddd"" class=""bui-border-west bui-layout-item-border"">
            </div>
            <div id=""org-layout-center"" style=""overflow-y:auto;"" class=""bui-border-center bui-layout-item-border"">
                <div id=""SOrganizationBtns"" class=""SearchBtns"" style=""width:100%;border:1px solid #ddd;"">
                </div>
                <div id=""SOrganizationForm"" class=""bui-clear"">
                    <table style=""border-collapse:separate;"" width=""100%"">
                        <tr>
                            <td align=""right"" style=""padding:5px;"">
                                机构编码
                            </td>
                            <td style=""padding:5px;"">
                                <input class=""form-control"" readonly=""readonly"" name=""OrgCode"" style=""width: 180px");
            WriteLiteral(@";"" />
                            </td>
                            <td align=""right"" style=""padding:5px;"">
                                机构名称
                            </td>
                            <td style=""padding:5px;"">
                                <input class=""form-control"" readonly=""readonly"" name=""OrgName"" style=""width: 180px;"" />
                            </td>
                            <td align=""right"" style=""padding:5px;"">
                                简称
                            </td>
                            <td style=""padding:5px;"">
                                <input class=""form-control"" readonly=""readonly"" name=""ShortName"" style=""width: 180px;"" />
                            </td>
                        </tr>
                        <tr>
                            <td align=""right"" style=""padding:5px;"">
                                上级机构
                            </td>
                            <td style=""padding:5px;"">
                  ");
            WriteLiteral(@"              <input class=""form-control"" readonly=""readonly"" name=""ParentName"" style=""width: 180px;"" />
                            </td>
                            <td align=""right"" style=""padding:5px;"">
                                地址
                            </td>
                            <td style=""padding:5px;"" colspan=""3"">
                                <input class=""form-control"" readonly=""readonly"" name=""Address"" style=""width: 400px;"" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div id=""UserGrid"">
                </div>
            </div>
        </div>
    </div>
</div>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2854, 8244, true);
                WriteLiteral(@"
    <script type=""text/javascript"">
        var common = new CommonBUI({ controller: ""SOrganization"", Btns: ""#SOrganizationBtns"", DataGrid: ""#UserGrid"" });
        var fcommon = new CommonBUI({ controller: ""SOrganization"", Btns: ""#SOrganizationBtns"", DataGrid: ""#UserGrid"" });
        var store = new BUI.Data.TreeStore(), tree, oGrid, orgData;

        //初始化布局
        function initLayout() {
            var layoutControl = new BUI.Layout.BuiLayout({
                srcNode: ""#org-layout"",
                render: ""parent"",
                children: [{
                    srcNode: ""#org-layout-west"",
                    xclass: 'controller',
                    region: 'west',
                    width: 200
                }, {
                    srcNode: ""#org-layout-center"",
                    xclass: 'controller',
                    region: 'center'
                }]
            });
            layoutControl.render();
        }

        //初始化结构树
        function initTree() {
  ");
                WriteLiteral(@"          tree = new BUI.Tree.TreeList({
                render: '#org-layout-west',
                store: store
            });
            tree.render();

            tree.on('itemclick', function (ev) {
                var item = ev.item;
                loadOrganization(item.id);
                loadGrid(item.id);
            });

            common.search();
        }

        //初始化grid
        function initGrid(initData) {
            oGrid = new BUIGrid({
                render: fcommon.DataGrid,
                common: fcommon,
                pager: false
            });
            oGrid.init();
        }

        //查询组织机构
        function loadOrganization(resId) {
            common.get(common.controller, ""SearchSingle"", ""Id="" + resId, function (data) {
                orgData = data;
                $(""#SOrganizationForm .form-control"").each(function () {
                    $(this).val(data[this.name]);
                });
            });
        }

        //查");
                WriteLiteral(@"询用户
        function loadGrid(resId) {
            common.SelectDetail(""SUser"", resId, 1, 20, function (result) {
                oGrid.setResult(result);
            });
        }

        //初始化列显示隐藏
        function initUserColumns(iData) {
            for (var i = 0; i < iData.Columns.length; i++) {
                switch (iData.Columns[i].dataIndex) {
                    case ""UserCode"":
                    case ""UserName"":
                    case ""SuperUser"":
                    case ""OrgID"":
                        iData.Columns[i].visible = true;
                        break;
                    default:
                        iData.Columns[i].visible = false;
                }
            }
        }

        //添加
        common.add = function () {
            var data = {};
            if (orgData) {
                data.ParentID = orgData.ID;
                data.ParentName = orgData.OrgName;
            }

            var form = new BuiForm({ common: common, data: ");
                WriteLiteral(@"data, type: ""add"" });

            form.save = function (data) {
                common.Insert(data, function () {
                    common.search();
                    form.close();
                });
            }

            //外键查询
            form.fSearch = function (opts) {
                if (BUI.isNullOrEmpty(opts.text) || opts.evttype == ""click"") {
                    searchOrg(form, opts);
                } else {
                    //查询业务伙伴
                    fcommon.get(""SOrganization"", ""GetOrganizationCodeName"", ""words="" + CommonBUI.UrlEncode(opts.text), function (rdata) {
                        if (rdata.result.length == 1) {
                            var data = rdata.result[0];
                            var target = opts.target;
                            target.setSearchValue(data.ID || 0);
                            target.setSearchText(data.OrgName || """");
                        } else {
                            searchOrg(form, opts);
                 ");
                WriteLiteral(@"       }
                    });
                }
            }

            form.show(900, 200);
        }

        //删除
        common.remove = function () {
            var deleteRow = tree.getSelected();
            if (deleteRow == null) {
                CommonBUI.alert(""提示"", ""请选择编辑的组织机构."");
                return false;
            }
            if (deleteRow.children.length > 0) {
                CommonBUI.alert(""提示"", ""当前节点存在子组织,不能删除."");
                return false;
            }
            common.Delete(deleteRow.id, function () {
                common.search();
            });
        }

        //查询
        common.search = function () {
            common.get(common.controller, ""GetTree"", """", function (treedata) {
                store.setResult(treedata);
            });
        }

        //编辑
        common.edit = function () {
            var deleteRow = tree.getSelected();
            if (deleteRow) {
                var form = new BuiForm({ data: orgData");
                WriteLiteral(@", common: common, type: ""edit"" });

                //外键查询
                form.fSearch = function (opts) {
                    if (BUI.isNullOrEmpty(opts.text) || opts.evttype == ""click"") {
                        searchOrg(form, opts);
                    } else {
                        //查询业务伙伴
                        fcommon.get(""SOrganization"", ""GetOrganizationCodeName"", ""words="" + CommonBUI.UrlEncode(opts.text), function (rdata) {
                            if (rdata.result.length == 1) {
                                var data = rdata.result[0];
                                var target = opts.target;
                                target.setSearchValue(data.ID || 0);
                                target.setSearchText(data.OrgName || """");
                            } else {
                                searchOrg(form, opts);
                            }
                        });
                    }
                }

                form.save = function (data) {
  ");
                WriteLiteral(@"                  common.Update(data, function () {
                        common.search();
                        form.close();
                    });
                }
                form.show(900, 200);
            } else {
                CommonBUI.alert(""提示"", ""请选择编辑的组织机构."");
            }
        }

        //选择组织机构
        function searchOrg(frm, opts) {
            var dialog = new BUI.Overlay.Dialog({
                title: ""选择组织"",
                width: 300,
                height: 500,
                mask: true,
                closeAction: ""destroy"",
                bodyContent: '<iframe id=""ifrmSearch"" scrolling=""auto"" frameborder=""0""  src=""../SOrganization/SearchOrgView"" style=""width:100%;height:100%;""></iframe>',
                success: function () {
                    var data = CommonBUI.ExcuteIFrameMethod(""ifrmSearch"", ""getData"");
                    if (data) {
                        frm.setReturnValue(opts, data);
                        dialog.close();
    ");
                WriteLiteral(@"                } else {
                        frm.setReturnValue(opts, {});
                        dialog.close();
                    }
                }
            });
            dialog.show();
        }

        //初始化列
        function initColumns(columns) {
            $.each(columns,
                function (index, item) {
                    columns[index] = new BUI.Grid.Column(item);
                });
        }

        $(document).ready(function () {
            //初始化布局
            initLayout();

            //初始化
            common.Init(function (iData) {
                //按钮初始化
                common.InitCommonds(common, $(common.Btns), iData.Commands);
                initColumns(common.initData.Columns);
            });

            //外键初始化
            common.ForeignInit(""SUser"", function (fdata) {
                initUserColumns(fdata);
                fcommon.initData = fdata;
                initGrid();
            });

            //初始化组织结构树
       ");
                WriteLiteral("     initTree();\r\n        });\r\n\r\n    </script>\r\n    ");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
